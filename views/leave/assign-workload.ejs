<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Assign Workload - LeaveManager</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Navigation -->
    <nav class="bg-blue-600 text-white shadow-lg">
        <div class="max-w-7xl mx-auto px-4">
            <div class="flex justify-between items-center py-4">
                <div class="flex items-center space-x-3">
                    <i class="fas fa-calendar-alt text-2xl"></i>
                    <h1 class="text-2xl font-bold">LeaveManager</h1>
                </div>
                <div class="space-x-4">
                    <a href="/dashboard" class="hover:text-blue-200 transition duration-200">Dashboard</a>
                    <a href="/auth/logout" class="hover:text-blue-200 transition duration-200">Logout</a>
                </div>
            </div>
        </div>
    </nav>

    <div class="max-w-6xl mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold text-gray-800 mb-2">Assign Workload</h1>
        <p class="text-gray-600 mb-8">Assign workload to faculty members for approved leaves</p>

        <div id="leaveApplications" class="space-y-6">
            <!-- Leave applications will be loaded here -->
        </div>
    </div>

    <!-- Assignment Modal -->
    <div id="assignmentModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden flex items-center justify-center z-50">
        <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
            <h3 class="text-lg font-semibold mb-4">Assign Workload</h3>
            <form id="assignmentForm">
                <input type="hidden" id="leaveApplicationId">
                
                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">Assign To</label>
                    <select id="assignedTo" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                        <option value="">Select Faculty Member</option>
                    </select>
                </div>

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">Subjects</label>
                    <input type="text" id="subjects" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Math, Physics, etc." required>
                </div>

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">Classes</label>
                    <input type="text" id="classes" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Class A, Class B, etc." required>
                </div>

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">Total Hours</label>
                    <input type="number" id="totalHours" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" min="1" required>
                </div>

                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="closeAssignmentModal()" class="px-4 py-2 text-gray-600 hover:text-gray-800 font-medium">Cancel</button>
                    <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium">
                        Assign Workload
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        let facultyMembers = [];

        // Load leave applications
        async function loadLeaveApplications() {
            try {
                const response = await fetch('/api/hod/leave-applications');
                const data = await response.json();
                
                if (data.success) {
                    facultyMembers = data.facultyMembers;
                    renderLeaveApplications(data.leaveApplications);
                }
            } catch (error) {
                console.error('Error loading leave applications:', error);
            }
        }

        function renderLeaveApplications(applications) {
            const container = document.getElementById('leaveApplications');
            
            if (applications.length === 0) {
                container.innerHTML = `
                    <div class="text-center py-8 text-gray-500">
                        <i class="fas fa-check-circle text-3xl mb-3"></i>
                        <p>No approved leaves requiring workload assignment</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = applications.map(app => {
                const startDate = new Date(app.startDate).toLocaleDateString();
                const endDate = new Date(app.endDate).toLocaleDateString();
                
                return `
                    <div class="bg-white rounded-lg shadow-md p-6">
                        <div class="flex justify-between items-start mb-4">
                            <div>
                                <h3 class="font-semibold text-lg">${app.faculty.name}</h3>
                                <p class="text-gray-600">${app.faculty.department} â€¢ ${app.leaveType} Leave</p>
                                <p class="text-sm text-gray-500">${startDate} to ${endDate}</p>
                            </div>
                            <button onclick="openAssignmentModal('${app._id}')" 
                                    class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm font-medium">
                                Assign Workload
                            </button>
                        </div>
                        <p class="text-gray-700"><strong>Reason:</strong> ${app.reason}</p>
                    </div>
                `;
            }).join('');
        }

        function openAssignmentModal(leaveApplicationId) {
            document.getElementById('leaveApplicationId').value = leaveApplicationId;
            
            // Populate faculty dropdown
            const facultySelect = document.getElementById('assignedTo');
            facultySelect.innerHTML = '<option value="">Select Faculty Member</option>' +
                facultyMembers.map(faculty => 
                    `<option value="${faculty._id}">${faculty.name} (${faculty.email})</option>`
                ).join('');
            
            document.getElementById('assignmentModal').classList.remove('hidden');
        }

        function closeAssignmentModal() {
            document.getElementById('assignmentModal').classList.add('hidden');
            document.getElementById('assignmentForm').reset();
        }

        // Handle form submission
        document.getElementById('assignmentForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = {
                leaveApplicationId: document.getElementById('leaveApplicationId').value,
                assignedTo: document.getElementById('assignedTo').value,
                subjects: document.getElementById('subjects').value.split(',').map(s => s.trim()),
                classes: document.getElementById('classes').value.split(',').map(c => c.trim()),
                totalHours: parseInt(document.getElementById('totalHours').value)
            };

            try {
                const response = await fetch('/api/hod/assign-workload', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                });

                const data = await response.json();
                
                if (data.success) {
                    alert('Workload assigned successfully!');
                    closeAssignmentModal();
                    loadLeaveApplications();
                } else {
                    alert('Error: ' + data.message);
                }
            } catch (error) {
                console.error('Error assigning workload:', error);
                alert('Error assigning workload');
            }
        });

        // Load data when page loads
        document.addEventListener('DOMContentLoaded', loadLeaveApplications);
    </script>
</body>
</html>